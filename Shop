import java.util.ArrayList;
import java.util.List;

class Loja {
    private List<Item> itens;

    public Loja() {
        itens = new ArrayList<>();
        inicializarItens();
    }

    // Inicializa itens da loja
    public void inicializarItens() {
        // Comidas
        itens.add(new Item("P√£o Pequeno", "COMIDA", 5, 10));
        itens.add(new Item("P√£o M√©dio", "COMIDA", 10, 20));
        itens.add(new Item("P√£o Grande", "COMIDA", 15, 30));
        itens.add(new Item("Bolo Pequeno", "COMIDA", 8, 15));
        itens.add(new Item("Bolo M√©dio", "COMIDA", 15, 30));
        itens.add(new Item("Bolo Grande", "COMIDA", 25, 50));
        itens.add(new Item("Pizza Pequena", "COMIDA", 12, 25));
        itens.add(new Item("Pizza M√©dia", "COMIDA", 20, 40));
        itens.add(new Item("Pizza Grande", "COMIDA", 30, 65));

        // Po√ß√µes
        itens.add(new Item("Po√ß√£o de Sa√∫de Pequena", "POCAO", 10, 15));
        itens.add(new Item("Po√ß√£o de Sa√∫de M√©dia", "POCAO", 20, 30));
        itens.add(new Item("Po√ß√£o de Sa√∫de Grande", "POCAO", 30, 50));

        // Brinquedos
        itens.add(new Item("Brinquedo Simples", "BRINQUEDO", 8, 10));
        itens.add(new Item("Brinquedo M√©dio", "BRINQUEDO", 15, 20));
        itens.add(new Item("Brinquedo Luxuoso", "BRINQUEDO", 25, 35));

        // Energ√©ticos
        itens.add(new Item("Caf√© Pequeno", "ENERGETICO", 5, 10));
        itens.add(new Item("Caf√© M√©dio", "ENERGETICO", 10, 20));
        itens.add(new Item("Caf√© Grande", "ENERGETICO", 15, 30));
    }

    // Exibe itens
    public void exibirItens() {
        System.out.println("\nüè™ === LOJA === üè™");
        for (int i = 0; i < itens.size(); i++) {
            Item item = itens.get(i);
            System.out.printf("%d. %s (%s) - Valor: %d | Pre√ßo: %d BTC\n",
                    i + 1, item.getNome(), item.getTipo(), item.getValor(), item.getPreco());
        }
    }

    // Retorna item por √≠ndice (1-based)
    public Item getItemPorIndice(int indice) {
        if (indice > 0 && indice <= itens.size()) {
            return itens.get(indice - 1);
        }
        return null;
    }
}
